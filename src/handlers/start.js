const User = require('../models/User');

module.exports = async (bot, msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id.toString();

  console.log(`Processing /start command for user: ${userId}, chat type: ${msg.chat.type}`);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ
  if (msg.chat.type !== 'private') {
    console.log(`Ignoring /start in non-private chat (chatId: ${chatId})`);
    bot.sendMessage(chatId, 'üá∑üá∫ –ö–æ–º–∞–Ω–¥–∞ /start –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —á–∞—Ç–∞—Ö —Å –±–æ—Ç–æ–º. üá¨üáß The /start command is only available in private chats with the bot.');
    return;
  }

  try {
    let user = await User.findOne({ telegramId: userId });

    if (!user) {
      // –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –Ω–∞—á–∏–Ω–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
      console.log(`Creating new user for telegramId: ${userId}`);
      user = await User.create({
        telegramId: userId,
        telegramUsername: msg.from.username ? `@${msg.from.username}` : null,
        registrationStep: 'language',
        language: 'RU' // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      });
      const welcomeMessage = 'üá∑üá∫ –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / üá¨üáß Choose language:';
      bot.sendMessage(chatId, welcomeMessage, {
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üá∑üá∫ –†—É—Å—Å–∫–∏–π (RU)', callback_data: 'language_RU' }],
            [{ text: 'üá¨üáß English (EN)', callback_data: 'language_EN' }],
          ],
        },
      });
      console.log(`Sent welcome message to chatId: ${chatId}, text: "${welcomeMessage}"`);
    } else if (user.registrationStep !== 'completed') {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      console.log(`User ${userId} is in registration step: ${user.registrationStep}`);
      bot.sendMessage(chatId, user.language === 'RU' ?
              'üá∑üá∫ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:' :
              'üá¨üáß Please complete registration. Choose language:',
          {
            reply_markup: {
              inline_keyboard: [
                [{ text: 'üá∑üá∫ –†—É—Å—Å–∫–∏–π (RU)', callback_data: 'language_RU' }],
                [{ text: 'üá¨üáß English (EN)', callback_data: 'language_EN' }],
              ],
            },
          });
      console.log(`Sent registration continuation message to chatId: ${chatId}`);
    } else {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
      console.log(`User ${userId} is already registered, showing reply keyboard`);
      const welcomeMessage = user.language === 'RU' ?
          `üá∑üá∫ –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, ${user.nickname || '–∏–≥—Ä–æ–∫'}!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: –õ–ö, –†–µ–π—Ç–∏–Ω–≥, –ù–∞—Å—Ç—Ä–æ–π–∫–∏, –ì–µ—Ä–æ–∏, –°–∏–Ω–¥–∏–∫–∞—Ç—ã, –ü–æ–∏—Å–∫` :
          `üá¨üáß Welcome back, ${user.nickname || 'player'}!\nChoose an action:\nAvailable commands: Profile, Rating, Settings, Heroes, Syndicates, Search`;

      bot.sendMessage(chatId, welcomeMessage, {
        reply_markup: {
          keyboard: [
            [user.language === 'RU' ? '–õ–ö' : 'Profile', user.language === 'RU' ? '–†–µ–π—Ç–∏–Ω–≥' : 'Rating', user.language === 'RU' ? '–ù–∞—Å—Ç—Ä–æ–π–∫–∏' : 'Settings'],
            [user.language === 'RU' ? '–ì–µ—Ä–æ–∏' : 'Heroes', user.language === 'RU' ? '–°–∏–Ω–¥–∏–∫–∞—Ç—ã' : 'Syndicates', user.language === 'RU' ? '–ü–æ–∏—Å–∫' : 'Search'],
          ],
          resize_keyboard: true,
          one_time_keyboard: false
        },
      });
      console.log(`Sent welcome back message to chatId: ${chatId}, text: "${welcomeMessage}"`);
    }
  } catch (error) {
    console.error(`Error in startHandler for user ${userId}:`, error.stack);
    bot.sendMessage(chatId, 'üá∑üá∫ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ. üá¨üáß An error occurred. Try again later.');
    console.log(`Sent error message to chatId: ${chatId}`);
  }
};